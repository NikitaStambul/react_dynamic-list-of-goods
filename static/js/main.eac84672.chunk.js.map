{"version":3,"sources":["GoodsList.tsx","api/goods.ts","components/Loader/Loader.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","getAll","fetch","then","response","ok","headers","get","includes","json","Promise","reject","Error","status","text","catch","error","window","console","warn","Loader","className","App","useState","setGoods","isLoading","setIsLoading","handleClick","useCallback","buttonName","promise","sort","current","next","localeCompare","slice","filter","err","finally","type","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"mPAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CACLC,MAAOF,EAAKE,OAJhB,SAOGF,EAAKG,MANDH,EAAKI,U,OCNX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAa,IAAD,EAChB,OAAKA,EAASC,GAMV,UAACD,EAASE,QAAQC,IAAI,uBAAtB,OAAC,EAAsCC,SAAS,oBAM7CJ,EAASK,OALPC,QAAQC,OACb,IAAIC,MAAM,6BAPLF,QAAQC,OACb,IAAIC,MAAJ,UAAaR,EAASS,OAAtB,cAAkCT,EAASU,WAYhDC,OAAM,SAAAC,GAGL,OAFAC,OAAOC,QAAQC,KAAKH,GAEb,M,MAIN,IC1BMI,EAAmB,kBAC9B,qBAAKC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,uBCKNC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAO7B,EAAP,KAAc8B,EAAd,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KAEMC,EAAcC,uBAAY,SAACC,GAG/B,IAAIC,EAEJ,OAJAJ,GAAa,GAILG,GACN,IAAK,aACHC,EAAU7B,IACV,MAEF,IAAK,oBACH6B,EFKC7B,IACJE,MAAK,SAAAT,GAKJ,OAJoB,YAAIA,GAAOqC,MAAK,SAACC,EAASC,GAAV,OAClCD,EAAQjC,KAAKmC,cAAcD,EAAKlC,SAGfoC,MAAM,EAAG,MEV1B,MAEF,IAAK,aACHL,EFYC7B,IACJE,MAAK,SAAAT,GACJ,OAAOA,EAAM0C,QAAO,kBAAyB,QAAzB,EAAGtC,YEbrB,MAEF,QACEgC,EAAUpB,QAAQC,OAAO,IAAIC,MAAM,8BAIvCkB,EACG3B,KAAKqB,GACLT,OAAM,SAAAsB,GAAG,OAAIpB,OAAOC,QAAQC,KAAKkB,MACjCC,SAAQ,kBAAMZ,GAAa,QAC7B,IAEH,OACE,sBAAKL,UAAU,MAAf,UACE,uDAEA,wBACEkB,KAAK,SACL,UAAQ,aACRC,QAAS,WACPb,EAAY,eAEdc,SAAUhB,EANZ,4BAWA,wBACEc,KAAK,SACL,UAAQ,oBACRC,QAAS,WACPb,EAAY,sBAEdc,SAAUhB,EANZ,gCAWA,wBACEc,KAAK,SACL,UAAQ,aACRC,QAAS,WACPb,EAAY,eAEdc,SAAUhB,EANZ,4BAWCA,EACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAW/B,MAAOA,QC/E7BgD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.eac84672.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{\n          color: good.color,\n        }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(\n          new Error(`${response.status} - ${response.text}`),\n        );\n      }\n\n      if (!response.headers.get('content-type')?.includes('application/json')) {\n        return Promise.reject(\n          new Error('Content-type is not json'),\n        );\n      }\n\n      return response.json();\n    })\n    .catch(error => {\n      window.console.warn(error);\n\n      return [];\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => {\n      const sortedGoods = [...goods].sort((current, next) => (\n        current.name.localeCompare(next.name)\n      ));\n\n      return sortedGoods.slice(0, 5);\n    });\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => {\n      return goods.filter(({ color }) => color === 'red');\n    });\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\nimport { Loader } from './components/Loader';\n// or\n// import * as goodsAPI from './api/goods';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleClick = useCallback((buttonName: string) => {\n    setIsLoading(true);\n\n    let promise: Promise<Good[]>;\n\n    switch (buttonName) {\n      case 'all-button':\n        promise = getAll();\n        break;\n\n      case 'first-five-button':\n        promise = get5First();\n        break;\n\n      case 'red-button':\n        promise = getRedGoods();\n        break;\n\n      default:\n        promise = Promise.reject(new Error('Unexpected case in switch'));\n        break;\n    }\n\n    promise\n      .then(setGoods)\n      .catch(err => window.console.warn(err))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => {\n          handleClick('all-button');\n        }}\n        disabled={isLoading}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => {\n          handleClick('first-five-button');\n        }}\n        disabled={isLoading}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => {\n          handleClick('red-button');\n        }}\n        disabled={isLoading}\n      >\n        Load red goods\n      </button>\n\n      {isLoading\n        ? (<Loader />)\n        : (<GoodsList goods={goods} />)}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}