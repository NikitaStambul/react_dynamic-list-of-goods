{"version":3,"sources":["GoodsList.tsx","api/goods.ts","components/Loader/Loader.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","getAll","fetch","then","response","ok","headers","get","includes","json","Promise","reject","Error","status","get5First","sort","current","next","localeCompare","slice","getRedGoods","filter","Loader","className","App","useState","setGoods","isLoading","setIsLoading","hasError","setHasError","errorMessage","setErrorMessage","handleClick","useCallback","loaderFunction","catch","err","message","finally","type","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"mPAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CACLC,MAAOF,EAAKE,OAJhB,SAOGF,EAAKG,MANDH,EAAKI,U,OCNX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAa,IAAD,EAChB,OAAKA,EAASC,GAMV,UAACD,EAASE,QAAQC,IAAI,uBAAtB,OAAC,EAAsCC,SAAS,oBAM7CJ,EAASK,OALPC,QAAQC,OACb,IAAIC,MAAM,6BAPLF,QAAQC,OACb,IAAIC,MAAJ,kBAAqBR,EAASS,aAcjC,IAAMC,EAAY,WACvB,OAAOb,IACJE,MAAK,SAAAT,GAKJ,OAJoB,YAAIA,GAAOqB,MAAK,SAACC,EAASC,GAAV,OAClCD,EAAQjB,KAAKmB,cAAcD,EAAKlB,SAGfoB,MAAM,EAAG,OAIrBC,EAAc,WACzB,OAAOnB,IACJE,MAAK,SAAAT,GACJ,OAAOA,EAAM2B,QAAO,kBAAyB,QAAzB,EAAGvB,aCnChBwB,G,MAAmB,kBAC9B,qBAAKC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCGNC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAO/B,EAAP,KAAcgC,EAAd,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAAwCL,mBAAS,IAAjD,mBAAOM,EAAP,KAAqBC,EAArB,KAEMC,EAAcC,uBAAY,SAACC,GAC/BL,GAAY,GACZF,GAAa,GAEbO,IACGhC,KAAKuB,GACLU,OAAM,SAACC,GACNL,EAAgBK,EAAIC,SACpBR,GAAY,MAEbS,SAAQ,kBAAMX,GAAa,QAC7B,IAEH,OACE,sBAAKL,UAAU,MAAf,UACE,uDAEA,wBACEiB,KAAK,SACL,UAAQ,aACRC,QAAS,WACPR,EAAYhC,IAEdyC,SAAUf,EANZ,4BAWA,wBACEa,KAAK,SACL,UAAQ,oBACRC,QAAS,WACPR,EAAYnB,IAEd4B,SAAUf,EANZ,gCAWA,wBACEa,KAAK,SACL,UAAQ,aACRC,QAAS,WACPR,EAAYb,IAEdsB,SAAUf,EANZ,4BAWCA,IAAcE,EACV,cAAC,EAAD,IACA,cAAC,EAAD,CAAWnC,MAAOA,IACtBmC,GAAa,mBAAGN,UAAU,QAAb,SAAsBQ,QChE1CY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ea5a1f66.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{\n          color: good.color,\n        }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(\n          new Error(`Error - ${response.status}`),\n        );\n      }\n\n      if (!response.headers.get('content-type')?.includes('application/json')) {\n        return Promise.reject(\n          new Error('Content-type is not json'),\n        );\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => {\n      const sortedGoods = [...goods].sort((current, next) => (\n        current.name.localeCompare(next.name)\n      ));\n\n      return sortedGoods.slice(0, 5);\n    });\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => {\n      return goods.filter(({ color }) => color === 'red');\n    });\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleClick = useCallback((loaderFunction: () => Promise<Good[]>) => {\n    setHasError(false);\n    setIsLoading(true);\n\n    loaderFunction()\n      .then(setGoods)\n      .catch((err: Error) => {\n        setErrorMessage(err.message);\n        setHasError(true);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => {\n          handleClick(getAll);\n        }}\n        disabled={isLoading}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => {\n          handleClick(get5First);\n        }}\n        disabled={isLoading}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => {\n          handleClick(getRedGoods);\n        }}\n        disabled={isLoading}\n      >\n        Load red goods\n      </button>\n\n      {isLoading && !hasError\n        ? (<Loader />)\n        : (<GoodsList goods={goods} />)}\n      {hasError && (<p className=\"error\">{errorMessage}</p>)}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}